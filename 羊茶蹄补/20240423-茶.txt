#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}


void solve(){
    static vector <int> cnts(200050);

    int n;
    cin >> n;
    vector<vector<int>> As;
    for (int i = 0, k; i < n; ++ i){
        cin >> k;
        vector <int> A(k);
        for (auto &x : A){
            cin >> x;
            cnts[x] += 1;
        }
        As.push_back(A);
    }

    bool is_true = false;;
    for (int i = 0; i < n; ++ i){
        bool jug = 1;
        for (auto &x : As[i]){
            jug &= cnts[x] > 1;
        }
        if (jug){
            is_true = true;
            break;
        }
    }

    cout << (is_true ? "Yes\n" : "No\n");
    for (int i = 0; i < n; ++ i){
        for (auto &x : As[i]){
            cnts[x] -= 1;
        }
    }

}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}