#include <bits/stdc++.h>
using namespace std;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, T b){
    if (b < a) a = b;
}

void solve(){
    using ll = long long;
    const ll inf = 1e18;
    const int mod = 1e9+7;

    int n, m;
    cin >> n >> m;
    vector <int> A(n+1), B(m+1);
    vector <ll> Pr(n+1);
    vector<vector<ll>> f(m+1, vector<ll>(n+1, inf));
    vector<vector<int>> sche(m+1, vector<int>(n+1, 0));
    for (int i = 1; i <= n; ++ i){
        cin >> A[i];
        Pr[i] = Pr[i-1] + A[i];
    }
    for (int i = 1; i <= m; ++ i){
        cin >> B[i];
    }

    f[0][0] = 0;
    sche[0][0] = 1;
    auto mo = [&](long long x)->int{
        return (x%mod + mod) % mod;
    };
    for (int i = 1; i <= m; ++ i){
        f[i] = f[i-1], sche[i] = sche[i-1];
        const int cost = m-i, cur = B[i];
        vector <int> gpr(n+1);
        for (int j1=1, j2=1, r=0; j2 <= n; ++ j2){
            while (j1 <= j2 && Pr[j2] - Pr[j1-1] > cur) j1 += 1;
            if (j1 <= j2){
                r  = max(r, j1-1);
                while (r+1 < j2 && f[i][j1-1] == f[i][r+1]) r += 1;
                if (f[i][j2] > f[i][j1-1]+cost){
                    f[i][j2] = f[i][j1-1]+cost;
                    sche[i][j2] = mo(gpr[r] - gpr[j1-1] + sche[i][j1-1]);
                } else if (f[i][j2] == f[i][j1-1]+cost){
                    sche[i][j2] += mo(gpr[r] - gpr[j1-1] + sche[i][j1-1]);
                    if (sche[i][j2] >= mod) sche[i][j2] -= mod;
                }
            }
            gpr[j2] = (gpr[j2-1] + sche[i][j2]) % mod;
            // while (j2+1 <= n && Pr[j2+1]-Pr[j1-1] <= cur){
            //     j2 += 1;
            //     if (f[i][j2] > f[i][j1-1]+cost){
            //         f[i][j2] = f[i][j1-1] + cost;
            //         sche[i][j2] = sche[i][j1-1];
            //     } else if (f[i][j2] == f[i][j1-1]+cost){
            //         sche[i][j2] += sche[i][j1-1];
            //         if (sche[i][j2] >= mod) sche[i][j2] -= mod;
            //     }

            //     if (j2-1 >= j1 && f[i][j2] == f[i][j1-1]){
            //         sche[i][j2] += sche[i][j1-1];
            //         if (sche[i][j2] >= mod) sche[i][j2] -= mod;
            //     }
            // }
            // if (j1+1 <= n && f[i][j1+1] == f[i][j1]){
            //     sche[i][j1+1] += sche[i][j1];
            //     if (sche[i][j1+1] >= mod) sche[i][j1+1] -= mod;
            // }
        }
        // for (int j1=1, j2=0; j1 <= n; ++ j1){
            
        // }
        // for (int j = 0; j <= n; ++ j){
        //     cout << sche[i][j] << " ";
        // }
        // cout << "\n";
    }

    if (f[m][n] >= inf) cout << -1 << "\n";
    else cout << f[m][n] << " " << sche[m][n] << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}