#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const long double Pi = acos(-1.0);
template <class T> void fmax(T &a, T b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, T b){
    if (b < a) a = b;
}

void solve(){
    int n;
    cin >> n;

    auto call = [&](int x)->vector<int>{
        assert(x%2==1);
        vector <int> ans;
        for (int i = 2; i <= x-1; i += 2){
            if (i == x-1) ans.push_back(i-1), ans.push_back(i);
            else ans.push_back(i), ans.push_back(i-1);
        }
        ans.push_back(x);
        return ans;
    };

    vector <int> res;
    if (n%2){
        res = call(n);
        cout << n << "\n";
    } else {
        int cur = 0, all = 0;
        for (int i = int(log2(n)); i >= 0; -- i){
            all |= 1<<i;  // 偶数情况一定能构造所有位存在过的位 都填满
            if (((n>>i)&1) == 0){
                cur |= 1<<i;
            }
        }
        for (int i = int(log2(n)); i >= 0; -- i){
            if ((cur|(1<<i)) < n){
                cur |= 1<<i;
            }
        }
        assert((n-cur-1)%2 == 0);
        for (int i = cur+1; i < n; ++ i){
            res.push_back(i);
        }

        for (auto &x : call(cur)){
            res.push_back(x);
        }
        
        res.push_back(n);
        cout << all << "\n";
    }

    int len = res.size();
    for (int i = 0; i < len; ++ i){
        if (i) cout << " ";
        cout << res[i];
    }
    cout << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}