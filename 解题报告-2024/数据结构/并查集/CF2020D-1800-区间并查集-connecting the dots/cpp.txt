#include <bits/stdc++.h>
using namespace std;
using ll = long long;
 
void solve(){
    int n, m;
    cin >> n >> m;
    vector <int> p(n+1);
    vector <vector<int>> f(n+1, vector<int>(11));
    iota(p.begin(), p.end(), 0);

    function<int(int)> find = [&](int x){
        return p[x] = p[x]==x ? x : find(p[x]);
    };
    auto merge = [&](int x, int y)->void{
        x = find(x), y = find(y);
        if (x == y) return;
        p[y] = x;
    };

    for (int i = 0; i < m; ++ i){
        int a, d, k;
        cin >> a >> d >> k;
        f[a][d] = max(f[a][d], k);
    }

    for (int i = 1; i <= n; ++ i){
        for (int j = 1; j <= 10; ++ j){
            if (i+j > n) continue;
            if (f[i][j]){
                merge(i, i+j);
                f[i+j][j] = max(f[i+j][j], f[i][j]-1);
            }
        }
    }

    int res = 0;
    for (int i = 1; i <= n; ++ i){
        if (find(i) == i) ++ res;
    }

    cout << res << "\n";
}
 
int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}