/*
给长度为n的排列和字符串，字符串只能是 "L"，"R"表示和它左边/右边的数字交换的操作，

对于连续的改变一个字符串的操作，判断每一次能否将使用字符串操作将数组升序。
*/

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, q;
    cin >> n >> q;
    auto ck = [&](char a, char b){
        return a == 'R' || b == 'L';
    };
    vector <int> A(n+1), d(n+1);
    for (int i = 1; i <= n; ++ i){
        cin >> A[i];
        int u = i, v = A[i];
        if (u > v) swap(u, v);
        d[u] += 1, d[v] -= 1;
    }

    for (int i = 1; i <= n; ++ i) d[i] += d[i-1];

    set <int> st;
    string s;
    cin >> s;
    s = " " + s;
    for (int i = 1; i < n; ++ i){
        if (d[i] && !ck(s[i], s[i+1])){
            st.insert(i);
        }
    }

    while (q--){
        int pos;
        cin >> pos;
        if (d[pos-1]){
            if (s[pos-1] == 'L'){
                if (s[pos] == 'L') st.insert(pos-1);
                else st.erase(pos-1);
            }
        }
        if (d[pos]){
            if (s[pos+1] == 'R'){
                if (s[pos] == 'R') st.insert(pos);
                else st.erase(pos); 
            }
        }

        s[pos] = (s[pos] == 'L' ? 'R' : 'L');
        cout << (st.size() ? "NO\n" : "YES\n");
    }
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}