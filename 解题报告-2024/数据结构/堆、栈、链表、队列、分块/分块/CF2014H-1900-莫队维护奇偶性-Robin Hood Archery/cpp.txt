#include <bits/stdc++.h>
using namespace std;
using ld = long double;
const long double Pi = acos(-1.0);
template <class T> void fmax(T &a, T b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, T b){
    if (b < a) a = b;
}
struct Node {
    int l, r;
};
vector <int> cnt(1000001);

void solve(){
    int n, q;
    cin >> n >> q;
    vector <int> A(n+1), ans(q+1);
    for (int i = 1; i <= n; ++ i) cin >> A[i];
    vector <Node> B(q+1);
    for (int i = 1; i <= q; ++ i) cin >> B[i].l >> B[i].r;

    int L = max(1.0, round(sqrt(1.0*n*n/q)));
    vector <int> p(q);
    iota(p.begin(), p.end(), 1);


    sort(p.begin(), p.end(), [&](int x, int y){
        return B[x].l/L !=  B[y].l/L ? B[x].l/L < B[y].l/L : B[x].r < B[y].r;
    });

    int cur = 0;
    auto add = [&](int x){
        cnt[x] += 1;
        if (cnt[x]%2) cur += 1;
        else cur -= 1;
    };
    auto del = [&](int x){
        if (cnt[x]%2) cur -= 1;
        else cur += 1;
        cnt[x] -= 1;
    };

    int i = 1, j = 0;
    for (auto &idx : p){
        int l = B[idx].l, r = B[idx].r;
        while (j < r) add(A[++ j]);
        while (j > r) del(A[j --]);
        while (i > l) add(A[-- i]);
        while (i < l) del(A[i ++]);
        if ((r-l+1)%2) ans[idx] = 0;
        else ans[idx] = cur == 0;
    }

    while (i <= j) del(A[i ++]);
    
    for (int i = 1; i <= q; ++ i){
        if (ans[i]) cout << "YES\n";
        else cout << "NO\n";
    }
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}
