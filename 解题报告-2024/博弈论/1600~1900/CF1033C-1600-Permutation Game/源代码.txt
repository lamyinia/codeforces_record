#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int N = 100055, inf = 1e9;

vector <int> nums, to, f;
int n;

void solve(){
    cin >> n;
    f.resize(n+1), nums.resize(n+1), to.resize(n+1);
    for (int i = 1; i <= n; ++ i) cin >> nums[i], to[nums[i]] = i;
    // to[i]表示第 i 在nums中的下标
    // f[i] 表示在nums中下标为i的sg值
   
   // 如果可以到某一个必败态，那么他是必胜态
   // 如果不能到某一个必败态，那么他是必败态

    for (int i = n; i >= 1; -- i){
        // 枚举数字i的下标， (j-to[i])%i==0的位置
        int p = to[i];
        if (to[i] > i) p = to[i]%i;

        for (int j = p; j <= n; j += i){
            if (i >= nums[j]) continue;
            if (f[j]==0){
                f[to[i]] = 1;
                break;
            }
        }
    }

    for (int i = 1; i <= n; ++ i){
        if (f[i]) cout << "A";
        else cout << "B";
    }
    cout << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}