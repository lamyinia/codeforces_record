#include <bits/stdc++.h>
using namespace std;
using Pii = pair<int,int>;
using ll = long long;
const int N = 1e7, mod = 1e9+7, inf = 1e9;
vector <int> prms;
int f[N+11], Minp[N];
bool vis[N+11];
void solve(){
    auto call = [&](int x)->int{
        if (x == 1) return 1;
        x = Minp[x];
        if (x == 2) return 0;
        else return f[x];
    };
    int n;
    cin >> n;
    int res = 0;
    for (int i = 0, x; i < n; ++ i){
        cin >> x;
        res ^= call(x);
    }
    cout << (res ? "Alice\n" : "Bob\n");
}

int main(){
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
    int _ = 1;
    for (ll i = 2; i <= N; ++ i){
        if (!vis[i]){
            prms.push_back(i);
            Minp[i] = i;
        }
        for (auto &y : prms){
            if (y*i > N) break;
            Minp[y*i] = y;
            vis[y*i] = 1;
            if (i%y == 0) break;
        }
    }
    for (int i = 0; i < prms.size(); ++ i)
        f[prms[i]] = i+1;

    cin >> _;
    while (_--)
        solve();
    return 0;
}
