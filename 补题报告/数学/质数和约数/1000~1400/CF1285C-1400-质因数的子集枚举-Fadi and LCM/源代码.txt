#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int N = 200050;

void solve(){
    ll x;
    cin >> x;
    vector <ll> nums;
    for (ll i = 2; i <= x/i; ++ i){
        if (x%i == 0){
            int cnt = 0;
            while (x%i==0) x /= i, ++ cnt;
            nums.push_back(pow(i,cnt));
        }
    }
    if (x > 1) nums.push_back(x);

    // 最小的11个质数乘积大于2e9
    ll ans1 = 1e18, ans2 = 1e18;
    int n = nums.size();
    for (int i = 0; i < 1<<n; ++ i){
        ll A = 1, B = 1;
        for (int j = 0; j < n; ++ j){
            if (i>>j&1) A *= nums[j];
            else B *= nums[j];
        }
        if (max(ans1, ans2) > max(A, B)){
            ans1 = A, ans2 = B;
        }
    }
    cout << ans1 << " " << ans2 << "\n";
}

int main(){
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int _ = 1;
    while (_--) solve();
    return 0;
}