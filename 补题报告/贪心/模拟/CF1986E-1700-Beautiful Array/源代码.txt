#include <bits/stdc++.h>
using namespace std;
using Pii = pair<int,int>;
using ll = long long;
const int N = 2050, mod = 1e9 + 7, inf = 1e9;

/*
    将 A[i]%k 放入一个桶(存取模前的值A[i])，如果n是偶数，不允许存在桶有奇数个，如果n是奇数，最多存在一个桶有奇数个
    对于每个桶将其排序
    桶若有偶数个，贪心操作相邻的两项，使它们最小。
    桶若有奇数个，先枚举删除奇数项再转化为有偶数个的情况，可以用前缀和优化
*/
void solve(){
    int n, k;
    cin >> n >> k;
    vector<int> A(n+1);
    map <int,vector<int>> mp;
    set <int> st;
    for (int i = 1; i <= n; ++ i) cin >> A[i];
    sort(A.begin()+1, A.end());

    for (int i = 1; i <= n; ++ i){
        int x = A[i]%k;
        mp[x].push_back(A[i]);
        st.insert(x);
    }
    int cnt = n%2==0;
    ll res = 0;
    for (auto &x : st){
        if (mp[x].size()%2) ++ cnt;
        if (cnt > 1){
            cout << -1 << "\n";
            return;
        }
        if (mp[x].size()%2){
            ll sumL = 0, sumR = 0;
            for (int i = 2; i < mp[x].size(); i += 2){
                sumR += (mp[x][i]-mp[x][i-1])/k;
            }
            ll mins  = sumR;
            for (int i = 2; i < mp[x].size(); i += 2){
                sumR -= (mp[x][i]-mp[x][i-1])/k;
                sumL += (mp[x][i-1]-mp[x][i-2])/k;
                mins = min(mins, sumL+sumR);
            }
            res += mins;
        } else {
            for (int i = 1; i < mp[x].size(); i += 2)
                res += (mp[x][i]-mp[x][i-1])/k;
        }
    }
    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    cout << fixed << setprecision(12);
    int _ = 1;
    cin >> _;
    while (_--)
        solve();
    return 0;
}