#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int INF = 1e9, mod = 998244353;

int qmi(int a, int b){
	int res = 1;
	while (b){
		if (b&1) res = 1ll*res*a%mod;
		a = 1ll*a*a%mod;
		b >>= 1;
	}
	return res;
}

void solve(){
	int n;
	cin >> n;
	vector <int> a(2*n+1);
	vector <int> v;
	for (int i = 1; i <= 2*n; ++ i){
		cin >> a[i];
		if (a[i] != -1) v.push_back(a[i]);
	}
	vector <int> cnt(n+1);
	sort(v.begin(), v.end());
	int nume = 1, deno = 1;
	int p = 0, siz = 0;
	for (int i = 1; i <= 2*n; ++ i){
		if (a[i] != -1){
			++ cnt[a[i]];
			++ siz;
		} else {
			deno = 1ll*deno*siz%mod;  //分母乘以有多少个数
			nume = 1ll*nume*cnt[v[p]]%mod;  //分子乘以最小数的数量
			-- siz;
			-- cnt[v[p]], ++ p;
		}
	}

	cout << 1ll*nume*qmi(deno, mod-2)%mod << "\n";
	return;
}

int main(){
	ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	solve();
	return 0;
}

/*
2
1 2 -1 -1
499122177

3
1 2 -1 -1 1 -1
0

4
1 -1 2 -1 3 -1 4 -1
1
*/