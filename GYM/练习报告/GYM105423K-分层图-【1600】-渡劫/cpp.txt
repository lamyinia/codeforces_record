#include <bits/stdc++.h>
using namespace std;
const long double Pi = acos(-1.0);
template <class T> void fmax(T &a, T b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, T b){
    if (b < a) a = b;
}

void solve(){
    using ll = long long;
    using ary3 = array<ll,3>;
    using ary2 = array<ll,2>;
    const ll inf = 1e18;

    int n, m;
    cin >> n >> m;
    vector<vector<ary2>> g(n+1);
    for (int i = 0,a,b,c; i < m; ++ i){
        cin >> a >> b >> c;
        a -= 1, b -= 1;
        g[a].push_back({b,c});
        g[b].push_back({a,c});
    }
    vector <ll> A(n);
    for (auto &x : A) cin >> x;
    int S = n;
    for (int i = 0; i < n; ++ i){
        g[S].push_back({i,A[i]});
    }

    vector <ary2> dist(n+1, {inf,inf});
    auto cmps = [&](ary3 &u, ary3 &v)->bool{
        return u[2] > v[2];
    };
    priority_queue <ary3, vector<ary3>, decltype(cmps)> pq(cmps);  // 编号、状态、距离
    dist[S][0] = 0;
    pq.push({S, 0, 0});

    while (!pq.empty()){
        auto u = pq.top();
        pq.pop();
        if (u[2] > dist[u[0]][u[1]]) continue;
        int x = u[0], st = u[1];
        for (auto &j : g[x]){
            ll y = j[0], w = j[1];
            if (dist[y][st] > dist[x][st]+w){
                dist[y][st] = dist[x][st]+w;
                pq.push({y,st,dist[y][st]});
            }
            if (x != S && st == 0){
                if (dist[y][1] > dist[x][0]){
                    dist[y][1] = dist[x][0];
                    pq.push({y,1,dist[y][1]});
                }
            }
        }
    }

    long long res = 0;
    for (int i = 0; i < n; ++ i){
        fmax(res, min(dist[i][0], dist[i][1]));
    }

    cout << res << "\n";
}


int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}
