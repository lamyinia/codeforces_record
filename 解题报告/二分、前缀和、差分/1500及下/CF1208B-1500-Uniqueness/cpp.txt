#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int mod = 998244353, inf = 1e9;

void solve(){
    int n;
    cin >> n;
    map <int,int> mps;
    vector <int> A(n);
    int c = 0;
    for (auto &x : A){
        cin >> x;
        if (mps[x] == 0) ++ c;
        mps[x] += 1;
    }

    auto check = [&](int mid)->bool{
        int tar = n-mid;
        bool jg = 0;
        for (int i = 0, j = -1; i < n; ++ i){
            while (j+1 < n && j-i+1 < mid){
                j += 1;
                mps[A[j]] -= 1;
                if (!mps[A[j]]) c -= 1;
            }
            if (j-i+1 == mid && c == tar) jg = 1;
            mps[A[i]] += 1;
            if (mps[A[i]] == 1) c += 1;
        }
        return jg;
    };

    int l = 0, r = n-1;
    while (l < r){
        int mid = (l+r) >> 1;
        if (check(mid)) r = mid;
        else l = mid+1;
    }

    cout << l << "\n";
}
 
int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}