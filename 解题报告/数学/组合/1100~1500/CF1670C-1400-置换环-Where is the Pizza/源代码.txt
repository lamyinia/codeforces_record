#include <bits/stdc++.h>
using namespace std;
using Pii = pair<int,int>;
using ll = long long;
const int N = 2050, mod = 1e9 + 7, inf = 1e9;

/*
    从A[i] 向 B[i] 连边，我们会得到若干个环，因为 A 和 B 是排列，所以一定没有树枝
    每个环的贡献是 乘2
*/
void solve(){
    int n;
    cin >> n;
    vector <int> A(n+1), B(n+1), vis(n+1), pto(n+1);
    for (int i = 1; i <= n; ++ i) cin >> A[i];
    for (int i = 1; i <= n; ++ i) cin >> B[i];
    for (int i = 1, x; i <= n; ++ i){
        cin >> x;
        vis[x] = 1;
        pto[A[i]] = B[i];
    }

    int res = 1;
    for (int i = 1; i <= n; ++ i){
        if (vis[i]) continue;

        bool flg = 1;
        for (int j = pto[i]; j != i; j = pto[j]){
            if (vis[j]) flg = 0;
            vis[j] = 1;
        }
        /*
            如果形成了自环对答案的贡献是 乘1
        */
        if (flg && pto[i] != i) res *= 2, res %= mod;
    }

    cout << res << "\n";
}


int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--)
        solve();
    return 0;
}