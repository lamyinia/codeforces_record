#include <bits/stdc++.h>
using namespace std;
using ll = long long;
const int N = 1e5+5, inf = 1e9;
/*
	输出 n 个四元组，要求互不相同，两两间的最大公约数是 k 且 尽可能 小
*/
void solve(){
    int n, k;
    cin >> n >> k;
    const int dx[] = {1,2,3,5};
    vector <vector<int>> res;
    // 考虑最小的 4 个互素的数{1,2,3,5}, 连续的 3 个奇数一定互质， 奇数和偶数一定互质， 于是可以找连续的三个数，再去凑一个奇数。
    // 往后递推
    for (int i = 0; i < n; ++ i){
        vector <int> ans;
        for (int j = 0; j < 4; ++ j)
            ans.push_back(k*(6*i + dx[j]));
        res.push_back(ans);
    }

    cout << k*(6*(n-1) + dx[3]) << "\n";
    for (auto &ans : res){
        for (auto &x : ans) cout << x << " ";
        cout << "\n";
    }
}

int main(){
    int _ = 1;
    while (_--) solve();
    return 0;
}