#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin >> n;
    map <array<int,2>, int> mps;
    vector <int> digs[11], pow10(10);
    pow10[0] = 1;
    for (int i = 1; i < 10; ++ i) pow10[i] = pow10[i-1] * 10;

    for (int i = 0; i < n; ++ i){
        string s;
        cin >> s;
        int len = s.size(), sum1 = 0, sum2 = 0;
        for (int j = 0; j < len; ++ j){
            sum1 += (s[j]-'0');
            sum2 = sum2*10 + (s[j]-'0');
        }
        mps[{sum1,len}] += 1;
        digs[len].push_back(sum2);
    }

    long long res = 0;
    for (int len = 2; len <= 10; len += 2){
        for (int part = len/2; part < min(len, 6); ++ part){
            for (auto &dig : digs[part]){
                int d = part - len/2, sum1 = 0, sum2 = 0;
                for (int i = 0; i < part; ++ i){
                    int cur = dig/pow10[i]%10;
                    sum1 += i < d ? -cur : cur;
                    sum2 += i < len/2 ? cur : -cur;
                }
                if (sum1 >= 0) res += mps[{sum1, len-part}];
                if (sum2 >= 0 && part != len/2) res += mps[{sum2, len-part}];
            }
        }
    }

    cout << res << "\n";
}
 
int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}