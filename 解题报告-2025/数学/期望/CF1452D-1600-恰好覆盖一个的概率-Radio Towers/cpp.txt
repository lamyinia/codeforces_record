
#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 2e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    const int mod = 998244353;
    const int inv2 = mod - mod/2;
    const int inv4 = 1ll*inv2*inv2 % mod;

    int n;
    cin >> n;
    vector <i64> f(n+1);
    f[0] = 1;

    i64 f0 = f[0]*inv2, f1 = 0;
    for (int i = 1; i <= n; ++ i){
        if (i%2){
            f[i] = f0;
            f1 = (f1*inv4 + f[i]*inv2) % mod;
        } else {
            f[i] = f1;
            f0 = (f0*inv4 + f[i]*inv2) % mod;
        }
    }

    cout << f[n] << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}