#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    vector <int> A(n);
    for (auto &x : A){
        cin >> x;
    }
    int ma = *max_element(A.begin(), A.end());
    i64 cur = 1;
    for (int i = 0; i < n; ++ i){
        cur = cur * A[i] / __gcd(cur, 1ll*A[i]);
        if (cur > ma) break;
    }
    if (cur > ma) return void(cout << n << "\n");

    auto w = [&](int x)->int{
        i64 cur = 1, cnt = 0;
        for (auto &v : A){
            if (v == x) return 0;
            if (x%v == 0){
                cur = cur*v / __gcd(cur, 1ll*v);
                cnt += 1;
            }
        }
        return cur == x ? cnt : 0;
    };

    int res = 0;
    for (int i = 2; 1ll*i*i <= ma; ++ i){
        if (ma%i == 0){
            fmax(res, w(i));
            fmax(res, w(ma/i));
        }
    }
    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}