#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    vector <int> A(n);
    for (auto &x : A){
        cin >> x;
        x -= 1;
    }

    i64 ans = 1;
    int mi = 0; 
    for (int i = 0; i < n; ++ i){
        vector <int> vis(n, -1);
        vis[i] = 0;

        int cur = i;
        while (true){
            int j = A[cur];
            if (vis[j] != -1){
                i64 sz = vis[cur]-vis[j]+1;
                ans = ans / __gcd(sz, ans) * sz;
                fmax(mi, vis[j]);
                break;
            }
            vis[j] = vis[cur]+1;
            cur = j;
        }
    }

    i64 res = ans;
    while (res < mi) res += ans;

    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}