#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    map <char,int> mps;
    mps['R'] = 0;
    mps['G'] = 1;
    mps['B'] = 2;
    mps['Y'] = 3;
    mps['W'] = 4;

    set <array<char,2>> st;
    for (int i = 0; i < n; ++ i){
        char ch1, ch2;
        cin >> ch1 >> ch2;
        st.insert({ch1, ch2});
    }

    auto w = [&](int x)->int{
        if (x == 0) return 0;
        else return __builtin_popcount(x);
    };
    int res = inf_int;
    for (int msk1 = 0; msk1 < 32; ++ msk1){
        for (int msk2 = 0; msk2 < 32; ++ msk2){
            set <int> vis;
            for (auto &it : st){
                int cur = 0;
                char ch1 = it[0], ch2 = it[1];
                int d1 = mps[ch1], d2 = it[1]-'1';
                if (msk1>>d1 & 1) cur += (d1+1) * 6;
                if (msk2>>d2 & 1) cur += d2+1;
                vis.insert(cur);
            }
            if (vis.size() == st.size()) fmin(res, w(msk1)+w(msk2));
        }
    }

    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}