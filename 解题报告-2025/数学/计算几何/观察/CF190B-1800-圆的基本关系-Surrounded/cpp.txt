#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}
bool debug = 0;


void solve(){
    cout << fixed << setprecision(15);
    int x1, y1, r1, x2, y2, r2;
    cin >> x1 >> y1 >> r1 >> x2 >> y2 >> r2;

    int D = (x1-x2)*(x1-x2) + (y1-y2)*(y1-y2);
    if (D > (r1+r2)*(r1+r2)){
        f64 d = sqrtl(D)-(r1+r2);
        cout << d/2 << "\n";
    } else if (D < (r1-r2)*(r1-r2)){
        f64 d = max(r1, r2) - (sqrtl(D)+min(r1,r2));
        cout << d/2 << "\n";
    } else {
        cout << (f64)0 << "\n";
    }
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}