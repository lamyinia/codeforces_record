#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    auto W = [&](i64 x)->i64{
        return (x+1)*x/2;
    };

    i64 n, x, y, c;
    cin >> n >> x >> y >> c;
    auto chk = [&](i64 mid)->bool{
        i64 all = 2*mid*mid + 2*mid + 1;

        i64 rare = 0;
        if (mid > x-1){  // 分别考虑上、下、左、右
            i64 u = mid - (x-1);
            rare += u*u;
        }
        if (mid > n-x){
            i64 u = mid - (n-x);
            rare += u*u;
        }
        if (mid > y-1){
            i64 u = mid - (y-1);
            rare += u*u;
        }
        if (mid > n-y){
            i64 u = mid - (n-y);
            rare += u*u;
        }

        i64 r = mid - (n-y), l = mid - (y-1);  // 分别考虑右上、右下、左上、左下
        if (r > x) rare -= W(r-x);
        if (r > n-x+1) rare -= W(r - (n-x+1));
        if (l > x) rare -= W(l-x);
        if (l > n-x+1) rare -= W(l - (n-x+1));

        return all-rare >= c;
    };

    i64 lo = 0, hi = 2*n;
    while (lo < hi){
        i64 mid = (lo+hi) >> 1;
        if (chk(mid)) hi = mid;
        else lo = mid+1;
    }
    cout << lo << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}