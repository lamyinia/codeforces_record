void solve(){
    
    int n = 7;
    vector <int> A(n);
    for (int i = 0; i < n; ++ i){
        A[i] = i;
    }
    auto chk = [&]()->bool{
        vector<int> vis(n);
        vector<deque<int>> locs;
        for (int i = 0; i < n; ++ i){
            int j = i;
            deque <int> pos;
            while (!vis[j]){
                pos.push_back(j);
                vis[j] = 1;
                j = A[j];
            }
            if (pos.size()) locs.push_back(pos);
        }
        for (auto &vec : locs){
            int x = 0;
            for (auto &y : vec) fmax(x, y);
            while (vec[0] != x){
                vec.push_back(vec[0]);
                vec.pop_front();
            }
        }
        sort(locs.begin(), locs.end(), [&](auto &u, auto &v){
            return u[0] < v[0];
        });

        int i = 0;
        for (auto &vec : locs){
            for (auto &x : vec){
                if (x != A[i++]){
                    return false;
                }
            }
        }
        return true;
    };

    do {
        if (chk()){
            print(A);
        }
    } while(next_permutation(A.begin(), A.end()));
}