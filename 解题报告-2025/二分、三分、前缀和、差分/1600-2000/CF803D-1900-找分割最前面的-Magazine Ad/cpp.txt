#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int k;
    cin >> k;
    char _ = getchar();
    string s;
    getline(cin, s);
    int n = s.size();
    for (auto &ch : s){
        if (ch == ' ' || ch == '-') ch = '?';
    }

    auto chk = [&](int mid)->bool{
        int lst = -1, cut = -1, cnt = 0;
        for (int i = 0; i < n; ++ i){
            if (i-lst > mid){
                if (i-cut > mid) return false;
                lst = cut, cnt += 1;
            }
            if (s[i] == '?') cut = i;
        }
        return cnt < k;
    };
    int lo = 1, hi = n;
    while (lo < hi){
        int mid = (lo+hi) >> 1;
        if (chk(mid)) hi = mid;
        else lo = mid+1;
    }
    cout << lo << "\n";
}


int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}