#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    const int mod = 998244353;
    auto pows = [&](i64 a, int b)->int{
        i64 res = 1;
        while (b){
            if (b&1) res = res * a % mod;
            a = a*a % mod;
            b >>= 1;
        }
        return res;
    };

    vector <int> cnts(26);
    int sm = 0;
    for (int i = 0; i < 26; ++ i){
        cin >> cnts[i];
        sm += cnts[i];
    }

    const int n1 = (sm+1)/2, n2 = sm/2;
    const int tot = n1;

    vector <i64> fact(tot+1, 1), inv_fact(tot+1, 1);
    for (int i = 1; i <= tot; ++ i){
        fact[i] = fact[i-1] * i % mod;
    }
    inv_fact[tot] = pows(fact[tot], mod-2);
    for (int i = tot; i >= 1; -- i){
        inv_fact[i-1] = inv_fact[i] * i % mod;
    }
    auto comb = [&](int i, int j)->int{
        if (i < j) return 0;
        return fact[i] * inv_fact[j] % mod * inv_fact[i-j] % mod;
    };

    vector <i64> f1(n1+1), f2(n1+1);
    f1[0] = 1;
    int pre = 0;
    for (int i = 0; i < 26; ++ i){
        if (cnts[i] == 0) continue;

        int x = cnts[i];

        for (int j = 0; j <= n1; ++ j){
            if (n1-j >= x){
                f2[j+x] += f1[j] * comb(n1-j, x);
                f2[j+x] %= mod;
            }
            // cost = pre-j 偶数位用了多少个
            int cost = pre-j;
            if (cost >= 0 && n2 >= cost && n2-cost >= x){
                f2[j] += f1[j] * comb(n2-cost, x);
                f2[j] %= mod;
            }
        }

        for (int j = 0; j <= n1; ++ j){
            f1[j] = f2[j];
            f2[j] = 0;
        }
        pre += x;
    }
    
    cout << f1[n1] << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}