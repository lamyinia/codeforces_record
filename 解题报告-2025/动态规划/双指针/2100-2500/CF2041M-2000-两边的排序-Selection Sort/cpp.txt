#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    vector <int> A(n);
    for (auto &x : A){
        cin >> x;
    }
    auto call = [&]()->i64{
        vector <int> B = A;
        sort(B.begin(), B.end());
        i64 ans = 1ll*n*n;
        priority_queue <int,vector<int>,greater<int>> pq;
        for (int i = 0, j = -1; i < n; ++ i){
            if (i > j) pq.push(A[i]);
            while (j+1 <= i && pq.top() == B[j+1]){
                j += 1;
                pq.pop();
            }
            while (j+1 > i && j+1 < n && A[j+1] == B[j+1]){
                j += 1;
            }
            fmin(ans, 1ll*(i+1)*(i+1) + 1ll*(n-j-1)*(n-j-1));
        }
        return ans;
    };

    i64 res = call();
    for (auto &x : A){
        x = -x;
    }
    reverse(A.begin(), A.end());
    fmin(res, call());

    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}