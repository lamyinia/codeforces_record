#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    const int mod = 998244353;

    int n;
    cin >> n;
    vector<vector<int>> f(n+3,vector<int>(n+3)), acc(n+3,vector<int>(n+3));
    vector <int> nxtv(n+2), A(n+1), pw2(n+1, 1);
    iota(nxtv.begin(), nxtv.end(), 0);
    for (int i = 1; i <= n; ++ i){
        cin >> A[i];
    }

    for (int i = 0; i < n; ++ i){
        pw2[i+1] = pw2[i] * 2 % mod;
    }
    for (int i = 1; i <= n+1; ++ i){
        nxtv[i] = i;
        for (int j = i+1; j <= n; ++ j){
            if (A[j] > A[j-1]) nxtv[i] = j;
            else break;
        }
    }
    // return;
    f[0][1] = 1;
    for (int i = 0; i < n; ++ i){
        for (int j = i+1; j <= n; ++ j){
            const int &v = 1ll*f[i][j]*pw2[j-i-1]%mod;

            acc[i+1][j] += v, acc[i+1][j] %= mod;
            int &u = acc[i+1][nxtv[j+1]+1];
            u -= v, u %= mod;
            if (u < 0) u += mod;
        }

        for (int j = 1; j <= n; ++ j){
            acc[i+1][j] = (acc[i+1][j]+acc[i+1][j-1]) % mod;
            f[i+1][j] = acc[i+1][j];
        }
    }

    cout << f[n][n] << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}