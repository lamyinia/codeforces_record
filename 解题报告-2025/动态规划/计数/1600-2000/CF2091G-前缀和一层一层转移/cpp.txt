#include <bits/stdc++.h>using namespace std;using i64 = long long;using f64 = long double;using u64 = unsigned long long;const f64 eps = 1e-12;const i64 inf_i64 = 1e18;const int inf_int = 1e9;template <class T> void fmax(T &a, const T &b){    if (b > a) a = b;}template <class T> void fmin(T &a, const T &b){    if (b < a) a = b;}template <class T> void print(vector <T> &A, int d = 0){    int n = A.size();    for (int i = 0; i < n; ++ i){        if (i) cout << " ";        cout << A[i]+d;    }    cout << "\n";}int jgs(f64 x){    return x < -eps ? -1 : x > eps;}void solve(){    const int mod = 998244353;    auto add = [&](int &x, int y)->void{        x = (x + y) % mod;    };    int n, m, d;    cin >> n >> m >> d;    const int d1 = d, d2 = (int)sqrtl(d*d-1);    vector<vector<char>> g(n+2,vector<char>(m+2));    vector<vector<int>> f1(n+2,vector<int>(m+2));    vector<vector<int>> f2(n+2,vector<int>(m+2));    for (int i = n; i >= 1; -- i){        for (int j = 1; j <= m; ++ j){            cin >> g[i][j];        }    }    for (int i = 1; i <= m; ++ i){        if (g[1][i] == 'X'){            f1[1][i] = 1;        }    }    for (int i = 1; i <= n; ++ i){        vector <int> pr(m+2);        for (int j = 1; j <= m; ++ j){            if (g[i][j] != 'X') continue;            int l = max(1, j-d1), r = min(m, j+d1), v = f1[i][j];            if (d1 > 0){                pr[l] += v, pr[l] %= mod;                pr[j] = (pr[j]-v) % mod;                if (pr[j] < 0) pr[j] += mod;                pr[j+1] += v, pr[j+1] %= mod;                pr[r+1] = (pr[r+1]-v) % mod;                if (pr[r+1] < 0) pr[r+1] += mod;            }        }        int cur = 0;        for (int j = 1; j <= m; ++ j){            cur += pr[j], cur %= mod;            if (cur < 0) cur += mod;            if (g[i][j] == 'X'){                add(f2[i][j], cur);            }            pr[j] = 0;        }        if (i < n){            for (int j = 1; j <= m; ++ j){                if (g[i][j] != 'X') continue;                int l = max(1, j-d2), r = min(m, j+d2), v = (f1[i][j]+f2[i][j]) % mod;                pr[l] += v, pr[l] %= mod;                pr[r+1] = (pr[r+1]-v) % mod;                if (pr[r+1] < 0) pr[r+1] += mod;            }            cur = 0;            for (int j = 1; j <= m; ++ j){                cur += pr[j], cur %= mod;                if (cur < 0) cur += mod;                if (g[i+1][j] == 'X'){                    add(f1[i+1][j], cur);                }            }        }    }    int res = 0;    for (int i = 1; i <= m; ++ i){        int v = (f1[n][i] + f2[n][i]) % mod;        add(res, v);    }    cout << res << "\n";}int main(){#ifdef ONLINE_JUDGE    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);#else    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);#endif    int _ = 1;    cin >> _;    while (_--){        solve();    }    return 0;}