#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n, m;
    cin >> n >> m;
    vector <int> A(m+1), pr(m+1), sf(m+1);
    for (int i = 0,l,r; i < n; ++ i){
        cin >> l >> r;
        l -= 1, r -= 1;
        A[l] += 1, A[r+1] -= 1;
    }
    for (int i = 1; i < m; ++ i){
        A[i] += A[i-1];
    }
    
    vector <int> stk;
    for (int i = 0; i < m; ++ i){
        auto it = upper_bound(stk.begin(), stk.end(), A[i]);
        if (it == stk.end()) stk.push_back(A[i]);
        else *it = A[i];
        pr[i] = stk.size();
    }
    while (stk.size()) stk.pop_back();
    for (int i = m-1; i >= 0; -- i){
        auto it = upper_bound(stk.begin(), stk.end(), A[i]);
        if (it == stk.end()) stk.push_back(A[i]);
        else *it = A[i];
        sf[i] = stk.size();
    }

    int res = 0;
    for (int i = 0; i < m; ++ i){
        fmax(res, pr[i]+sf[i]-1);
    }
    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}