#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    const int bound = n+1;
    vector <int> A(n), cnts(bound+1);
    for (auto &x : A){
        cin >> x;
        if (x <= bound){
            cnts[x] += 1;
        }
    }

    vector <i64> f(bound+1, inf_i64);
    for (int i = 0; i <= bound; ++ i){
        int c = i+1;
        if (!cnts[i]){
            int x = i ? f[i-1] : 0;
            for (int j = i; j <= bound; ++ j){
                f[j] = x;
            }
            break;
        }
        for (int j = 0; j <= i; ++ j){
            i64 k = max(0ll, cnts[j]-1ll);
            if (j == 0) fmin(f[i], k*c);
            else fmin(f[i], f[j-1]+k*c+j);
        }
    }

    cout << f[bound] << "\n";
}


int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}