void solve(){
    int n, m;
    cin >> n >> m;
    auto chge = [&](int x)->vector<int>{
        vector <int> ans;
        if (x > 0){
            while (x){
                ans.push_back(x%7);
                x /= 7;
            }
        } else {
            ans.push_back(0);
        }
        reverse(ans.begin(), ans.end());
        return ans;
    };

    const int N = 1 << 7;
    auto got = [&](vector <int> curs)->vector <int>{
        bool jug = 1;  // 贴界的前缀是否合法
        vector <int> f1(N), f2(N);
        int msk = 0;

        for (auto &x : curs){
            
            for (int i = 0; i < N; ++ i){
                for (int j = 0; j < 7; ++ j){
                    if ((i & (1<<j)) == 0){
                        f2[i|(1<<j)] += f1[i];
                    }
                }
            }
            if (jug){
                for (int i = 0; i < x; ++ i){
                    if ((msk&(1<<i)) == 0){
                        f2[msk|(1<<i)] += 1;
                    }
                }
            }

            for (int i = 0; i < N; ++ i){
                f1[i] = f2[i];
                f2[i] = 0;
            }

            if (jug && (msk&(1<<x)) == 0){
                msk |= 1 << x;
            } else {
                jug = 0;
            }
        }
        if (jug){
            f1[msk] += 1;
        }
        return f1;
    };

    i64 res = 0;
    vector <int> f1 = got(chge(n-1)), f2 = got(chge(m-1));

    for (int i = 0; i < N; ++ i){
        for (int j = 0; j < N; ++ j){
            if ((i&j) == 0){
                res += 1ll * f1[i] * f2[j];
            }
        }
    }

    cout << res << "\n";
}