
#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n, t;
    cin >> n >> t;
    string s;
    cin >> s;
    int point = -1;
    for (int i = 0; i < n; ++ i){
        if (s[i] == '.'){
            point = i;
        }
    }
    string tar = s;
    int chose = -1;
    for (int i = point+1; i < n; ++ i){
        if ((int)s[i] >= (int)'5'){
            chose = i;
            break;
        }
    }

    if (chose != -1){
        while (tar.size() > chose+1){
            tar.pop_back();
        }

        while (tar.size() >= point+2 && (int)tar.back() >= (int)'4' && t > 0){
            tar.pop_back();
            if (tar.back() == '.') tar.pop_back();
            t -= 1;
        }
        if (tar.back() == '9'){
            assert(tar.size() == point);
            int j = tar.size()-1;
            while (tar[j] == '9'){
                tar[j] = '0';
                j -= 1;
            }
            if (j >= 0){
                tar[j] = char((int)tar[j]+1);
            } else {
                tar = "1" + tar;
            }
        } else {
            tar.back() = char((int)tar.back()+1);
        }
    }

    cout << tar << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}