#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 2e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    string s;
    cin >> n >> s;
    vector <int> nums;
    for (auto &ch : s){
        nums.push_back(ch-'0');
    }

    int m = nums.size();
    i64 res = 0, ba = 1;

    int i = m-1;
    while (i >= 0){
        i64 cur = nums[i], b = 10;
        while (i-1 >= 0 && cur < n){
            if (nums[i-1] == 0){
                f64 bj = b, j = i-1;
                while (j-1 >= 0){
                    j -= 1, bj *= 10;
                    if (nums[j] || cur+bj >= n) break;
                }
                if (!nums[j] || cur+bj >= n || cur+nums[j]*bj >= n) break;

                cur += nums[j]*bj;
                i = j, b = bj*10;
            } else {
                if (cur + nums[i-1]*b < n){
                    i -= 1;
                    cur += nums[i]*b;
                    b *= 10;
                } else break;
            }
        }
        res += cur * ba;
        i -= 1;
        if (i >= 0) ba *= n;
    }

    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}