#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 2e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n, m;
    cin >> n >> m;
    vector <int> A(n), B(m);
    int ma1 = 0, ma2 = 0;
    i64 tot1 = 0, tot2 = 0;
    for (auto &x : A){
        cin >> x;
        tot1 += x;
        fmax(ma1, x);
    }
    for (auto &x : B){
        cin >> x;
        tot2 += x;
        fmax(ma2, x);
    }
    
    i64 ans1 = 0, ans2 = 0;
    for (auto &x : A){
        ans1 += min(1ll*x, tot2);
    }
    ans1 += max(tot2-ma1, 0ll);

    for (auto &x : B){
        ans2 += min(1ll*x, tot1);
    }
    ans2 += max(tot1-ma2, 0ll);

    cout << min(ans1, ans2) << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}


