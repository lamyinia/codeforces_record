void solve(){
    string s1, s2, t;
    cin >> s1 >> s2 >> t;
    int n1 = s1.size(), n2 = s2.size(), n3 = t.size();
    vector<vector<vector<int>>> f(n1+1, vector<vector<int>>(n2+1, vector<int>(n3+1, -inf_int)));
    vector<vector<vector<array<int,3>>>> last(n1+1, vector<vector<array<int,3>>>(n2+1, vector<array<int,3>>(n3+1)));

    f[0][0][0] = 0;

    vector <int> ne(n3+1);
    t = " " + t;
    ne[0] = -1;
    for (int i = 1; i <= n3; ++ i){
        int j = ne[i-1];
        while (j != -1 && t[i] != t[j+1]) j = ne[j];
        ne[i] = j+1;
    }
    for (int i = 0; i <= n1; ++ i){
        for (int j = 0; j <= n2; ++ j){
            for (int k = 0; k < n3; ++ k){
                if (f[i][j][k] == -inf_int) continue;
                if (i < n1 && j < n2 && s1[i] == s2[j]){
                    int u = k;
                    while (u != 0 && s1[i] != t[u+1]) u = ne[u];
                    if (s1[i] == t[u+1]) u += 1;
                    if (f[i][j][k]+1 > f[i+1][j+1][u]){
                        f[i+1][j+1][u] = f[i][j][k]+1;
                        last[i+1][j+1][u] = {i,j,k};
                    }
                }
                if (i+1 <= n1 && f[i][j][k] > f[i+1][j][k]){
                    f[i+1][j][k] = f[i][j][k];
                    last[i+1][j][k] = {i,j,k};
                }
                if (j+1 <= n2 && f[i][j][k] > f[i][j+1][k]){
                    f[i][j+1][k] = f[i][j][k];
                    last[i][j+1][k] = {i,j,k};
                }
            }
        }
    }

    int res = -1, by = -1;
    for (int i = 0; i < n3; ++ i){
        if (f[n1][n2][i] > res){
            res = f[n1][n2][i];
            by = i;
        }
    }

    assert(by != -1);

    string ans;
    {
        int i = n1, j = n2;
        while (i > 0 || j > 0){
            auto &it = last[i][j][by];
            if (it[0] == i-1 && it[1] == j-1){
                assert(s1[i-1] == s2[j-1]);
                ans += s1[i-1];
            }
            i = it[0], j = it[1], by = it[2];
        }
        reverse(ans.begin(), ans.end());
    }

    if (ans.size()) cout << ans << "\n";
    else cout << 0 << "\n";
}