#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    string s;
    cin >> s;
    int n = s.size();
    vector <int> xs(n), ys(n);
    for (int i = 0; i < n; ++ i){
        if (s[i] == 'R') xs[i] = 1;
        else if (s[i] == 'L') xs[i] = -1;
        else if (s[i] == 'U') ys[i] = 1;
        else ys[i] = -1;
    }
    auto chk = [&](int bs, int by)->bool{
        int x = 0, y = 0;
        for (int i = 0; i < n; ++ i){
            if (x+xs[i]==bs && y+ys[i]==by) continue;
            x += xs[i], y += ys[i];
        }
        return x==0&&y==0;
    };
    int ansx = 0, ansy = 0;
    int x = 0, y = 0;
    for (int i = 0; i < n; ++ i){
        x += xs[i], y += ys[i];
        if (chk(x, y)){
            ansx = x, ansy = y;
            break;
        }
    }
    cout << ansx << " " << ansy << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}