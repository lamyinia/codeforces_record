#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n, m;
    cin >> n >> m;
    const int dx[] = {1, 1, -1, -1}, dy[] = {1, -1, 1, -1};
    vector <int> mis(4, inf_int);
    for (int i = 1; i <= n; ++ i){
        for (int j = 1; j <= m; ++ j){
            char ch;
            cin >> ch;
            if (ch == 'B'){
                for (int k = 0; k < 4; ++ k){
                    mis[k] = min(mis[k], i*dx[k] + j*dy[k]);                    
                }
            }
        }
    }
    int res = inf_int, res_x, res_y;

    for (int i = 1; i <= n; ++ i){
        for (int j = 1; j <= m; ++ j){
            int ans = -inf_int;
            for (int k = 0; k < 4; ++ k){
                int x = i*dx[k], y = j*dy[k];
                fmax(ans, x+y-mis[k]);
            }
            // cout << i << " " << j << " " << ans << "\n";
            if (res > ans){
                res = ans;
                res_x = i, res_y = j;
            }
        }
    }

    cout << res_x << " " << res_y << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--){
        solve();
    }
    return 0;
}