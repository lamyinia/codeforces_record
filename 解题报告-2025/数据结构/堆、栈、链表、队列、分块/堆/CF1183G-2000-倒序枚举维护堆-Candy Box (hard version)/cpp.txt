
#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 2e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> T MAX(const T &a, const T &b){
    return max(a, b);
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int n;
    cin >> n;
    vector <int> cnts1(n), cnts2(n), ids(n);
    iota(ids.begin(), ids.end(), 0);
    for (int i = 0,a,f; i < n; ++ i){
        cin >> a >> f;
        a -= 1;
        cnts1[a] += 1;
        if (f) cnts2[a] += 1;
    }

    sort(ids.begin(), ids.end(), [&](int u, int v){
        return cnts1[u] > cnts1[v];
    });

    i64 res = 0, ans = 0;
    priority_queue <int> pq;
    int j = 0;
    for (int i = n; i > 0; -- i){
        while (j < n && cnts1[ids[j]] >= i){
            pq.push(cnts2[ids[j]]);
            j += 1;
        }

        if (pq.size()){
            res += i;
            ans += min(i, pq.top());
            pq.pop();
        }
    }
    
    cout << res << " " << ans << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}