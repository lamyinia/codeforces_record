#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 1e18;
const int inf_int = 1e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A, int d = 0){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i]+d;
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    int a1, b1, a2, b2;
    cin >> a1 >> b1 >> a2 >> b2;

    map <i64,array<int,3>> mps;
    set <array<int,2>> st;

    queue <array<int,3>> Q;
    Q.push({a1, b1, 0});
    
    while (!Q.empty()){
        auto [x, y, dis] = Q.front();
        Q.pop();

        if (x > y) swap(x, y);
        if (st.count({x, y})) continue;

        st.insert({x, y});
        mps[1ll*x*y] = {x, y, dis};

        if (x%2 == 0){
            Q.push({x/2, y, dis+1});
        }
        if (x%3 == 0){
            Q.push({x-x/3, y, dis+1});
        }
        if (y%2 == 0){
            Q.push({x, y/2, dis+1});
        }
        if (y%3 == 0){
            Q.push({x, y-y/3, dis+1});
        }
    }

    int res = inf_int;
    array<int,4> ans = {-1,-1,-1,-1};

    Q.push({a2, b2, 0});
    st.clear();

    while (!Q.empty()){
        auto [x, y, dis] = Q.front();
        Q.pop();

        if (x > y) swap(x, y);
        if (st.count({x, y})) continue;
        st.insert({x, y});

        if (mps.count(1ll*x*y)){
            auto [ix, iy, d1] = mps[1ll*x*y];
            if (d1+dis < res){
                res = d1+dis;
                ans = {ix, iy, x, y};
            }
        }

        if (dis > res) continue;

        if (x%2 == 0){
            Q.push({x/2, y, dis+1});
        }
        if (x%3 == 0){
            Q.push({x-x/3, y, dis+1});
        }
        if (y%2 == 0){
            Q.push({x, y/2, dis+1});
        }
        if (y%3 == 0){
            Q.push({x, y-y/3, dis+1});
        }
    }


    if (res == inf_int){
        cout << -1 << "\n";
    } else {
        cout << res << "\n";
        cout << ans[0] << " " << ans[1] << "\n";
        cout << ans[2] << " " << ans[3] << "\n";
    }
}


int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--){
        solve();
    }
    return 0;
}