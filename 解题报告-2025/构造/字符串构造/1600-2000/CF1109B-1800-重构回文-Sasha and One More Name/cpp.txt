#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using f64 = long double;
using u64 = unsigned long long;
const f64 eps = 1e-12;
const i64 inf_i64 = 4e18;
const int inf_int = 2e9;
template <class T> void fmax(T &a, const T &b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, const T &b){
    if (b < a) a = b;
}
template <class T> void print(vector <T> &A){
    int n = A.size();
    for (int i = 0; i < n; ++ i){
        if (i) cout << " ";
        cout << A[i];
    }
    cout << "\n";
}
int jgs(f64 x){
    return x < -eps ? -1 : x > eps;
}

void solve(){
    auto impo = [&]()->void{
        cout << "Impossible\n";
    };

    string s;
    cin >> s;
    int n = s.size();
    set <char> st;

    if (n%2 == 0){
        for (int i = 0; i < n; ++ i){
            st.insert(s[i]);
        }
        
        if (st.size() == 1) return impo();

        while (s.size()%2 == 0){
            string t1 = s.substr(0, s.size()/2), t2 = t1;
            reverse(t2.begin(), t2.end());
            if (t1 != t2) return cout << 1 << "\n", void();
            s = t1;
        }
        cout << 2 << "\n";
    } else {
        for (int i = 0; i < n; ++ i){
            if (i == n/2) continue;
            st.insert(s[i]);
        }
        if (st.size() > 1) cout << 2 << "\n";
        else impo();
    }
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(nullptr), cout.tie(nullptr);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    while (_--) solve();
    return 0;
}
