#include <bits/stdc++.h>
using namespace std;
using ld = long double;
const long double Pi = acos(-1.0);
template <class T> void fmax(T &a, T b){
    if (b > a) a = b;
}
template <class T> void fmin(T &a, T b){
    if (b < a) a = b;
}

void solve(){   
    int n;
    cin >> n;
    vector <int> A(n+1), ps(n+1);
    for (int i = 1; i <= n; ++ i){
        cin >> A[i];
        ps[A[i]] = i;
    }

    vector <int> p(n+1), sz(n+1, 1);
    iota(p.begin(), p.end(), 0);
    auto find = [&](auto &&self, int x)->int{
        return p[x] = p[x] == x ? x : self(self, p[x]);
    };
    auto merge = [&](int x, int y)->void{
        x = find(find, x), y = find(find, y);
        sz[x] += sz[y];
        p[y] = x;
    };

    vector <int> vis(n+2);
    string res;
    for (int i = 1; i <= n; ++ i){
        int u = ps[i];
        if (vis[u-1]) merge(A[u], A[u-1]);
        if (vis[u+1]) merge(A[u], A[u+1]);
        int rt = find(find, A[u]);
        vis[u] = 1;
        if (sz[rt] == A[u]) res += '1';
        else res += '0';
    }

    cout << res << "\n";
}

int main(){
#ifdef ONLINE_JUDGE
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
#else
    freopen("in.txt", "rt", stdin), freopen("out.txt", "wt", stdout);
#endif
    int _ = 1;
    cin >> _;
    while (_--) solve();
    return 0;
}