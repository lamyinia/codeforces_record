#include <bits/stdc++.h>
using namespace std;
using Pii = pair<int,int>;
using ll = long long;
const int N = 5e4, mod = 1e9+7, inf = 1e9;

void solve(){
    int n;
    cin >> n;
    string s[2];
    cin >> s[0] >> s[1];

    vector <vector<int>> f(n, vector<int>(2));

    string t;
    {
        int i = 0, j = 0;
        while (i != n-1 || j != 1){
            t += s[j][i];
            if (j == 1) i += 1;
            else if (i == n-1) j += 1;
            else if (int(s[j][i+1]) <= int(s[j+1][i])) i += 1;
            else j += 1;
        }
    }
    t += s[1][n-1];

    // f[i][j] 表示 第i列 第j行的方案数量
    f[0][0] = 1;
    for (int i = 0; i < n-1; ++ i){
        for (int j = 0; j < 2; ++ j){
            if (j == 0){
                if (s[j][i] != t[i]) continue;
                if (s[j+1][i] == t[i+1]) f[i][j+1] += f[i][j];
                if (s[j][i+1] == t[i+1]) f[i+1][j] += f[i][j];
            } else {
                if (s[j][i] != t[i+1]) continue;
                if (s[j][i+1] == t[i+2]) f[i+1][j] += f[i][j];
            }
        }
    }
    if (s[0][n-1] == t[n-1]) f[n-1][1] += f[n-1][0];

    cout << t << "\n" << f[n-1][1] << "\n";
}

int main(){
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
    int _ = 1;
    cin >> _;
    while (_--)
        solve();
    return 0;
}